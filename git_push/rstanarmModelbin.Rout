
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #### ---- Project: APHRC Wash Data ----
> #### ---- Task: Simulation ----
> #### ---- Fit joint model ----
> #### ---- By: Steve and Jonathan ----
> #### ---- Date: 2019 Jul 04 (Thu) ----
> 
> library(dplyr)
> library(tidyr)
> library(tibble)
> library(ggplot2)
> library(rstanarm)
> 
> options(dplyr.width = Inf)
> 
> theme_set(theme_bw() + theme(panel.spacing=grid::unit(0,"lines")))
> 
> load("simulateHierarchicalmvn.rda")
> set.seed(7777)
> 
> # Objects in
> # * sim_dflist
> # * betas_df
> # * betas
> # * x
> 
> nsims <- length(sim_dflist)
> 
> report <- 1 # Index within nsims to save for summary
> rstanmodel_list <- list() 
> rstancoef_list <- list()
> for (s in 1:nsims){
+    df <- (sim_dflist[[s]]
+       %>% data.frame()
+    )
+ 	model <- stan_mvmer(
+ 		formula = list(
+ 			y1bin ~ x + (1 | id)
+ 			, y2bin ~ x + (1 | id)
+ 			, y3bin ~ x + (1 | id)
+ 		)
+ 		, data = sim_dflist[[1]]
+ 		, refresh = 0
+ 		, prior_intercept = normal(0, 1)
+ 		, prior = normal(0, 1)
+ 		, prior_aux = normal(0, 1)
+ 		, prior_covariance = lkj(4)
+ 		, family = list(binomial, binomial, binomial)
+ 		, chains = parallel::detectCores()
+ 		, cores = parallel::detectCores()
+ 		, seed = 7777
+ 		, iter = 2000
+ 	)
+ 	if (s <= report){
+ 		rstanmodel_list[[s]] <- model # Model to store
+ 	}
+ 	rstancoef_list[[s]] <- fixef(model)
+ }
Fitting a multivariate glmer model.

Please note the warmup may be much slower than later iterations!
> 
> # Print results
> rstancoef_df <- Reduce(rbind, rstancoef_list) %>% as_tibble()
> print(betas_df)
       coef betas  n
1  cor_y1y2   0.2 12
2  cor_y1y3   0.3 13
3  cor_y2y3   0.5 23
4     x:y10   0.3 10
5     x:y11   0.4 11
6     y1_sd   0.5  1
7     x:y20   0.3 20
8     x:y21   0.8 21
9     y2_sd   0.3  2
10    x:y30   0.4 30
11    x:y31   0.5 31
12    y3_sd   0.7  3
> print(rstancoef_df)
# A tibble: 2 x 3
     y1    y2    y3
  <dbl> <dbl> <dbl>
1 0.248 0.306 0.339
2 0.334 0.827 0.417
> 
> summary(rstanmodel_list[[1]])

Model Info:

 function:     stan_mvmer
 formula (y1): y1bin ~ x + (1 | id)
 family  (y1): binomial [logit]
 formula (y2): y2bin ~ x + (1 | id)
 family  (y2): binomial [logit]
 formula (y3): y3bin ~ x + (1 | id)
 family  (y3): binomial [logit]
 algorithm:    sampling
 priors:       see help('prior_summary')
 sample:       8000 (posterior sample size)
 num obs:      4500 (y1), 4500 (y2), 4500 (y3)
 groups:       id (150)
 runtime:      6.5 mins

Estimates:
                                          mean      sd        2.5%      25%    
y1|(Intercept)                              0.248     0.052     0.145     0.213
y1|x                                        0.334     0.032     0.273     0.313
y1|mean_PPD                                 0.558     0.010     0.538     0.551
y2|(Intercept)                              0.306     0.046     0.218     0.275
y2|x                                        0.827     0.038     0.753     0.801
y2|mean_PPD                                 0.567     0.010     0.548     0.560
y3|(Intercept)                              0.339     0.065     0.211     0.296
y3|x                                        0.417     0.034     0.351     0.395
y3|mean_PPD                                 0.575     0.010     0.556     0.569
Sigma[id:y1|(Intercept),y1|(Intercept)]     0.263     0.051     0.174     0.227
Sigma[id:y2|(Intercept),y1|(Intercept)]     0.024     0.027    -0.030     0.006
Sigma[id:y3|(Intercept),y1|(Intercept)]     0.153     0.043     0.075     0.123
Sigma[id:y2|(Intercept),y2|(Intercept)]     0.141     0.036     0.078     0.115
Sigma[id:y3|(Intercept),y2|(Intercept)]     0.110     0.034     0.047     0.087
Sigma[id:y3|(Intercept),y3|(Intercept)]     0.466     0.077     0.334     0.412
log-posterior                           -9078.614    21.281 -9120.275 -9092.682
                                          50%       75%       97.5%  
y1|(Intercept)                              0.248     0.283     0.350
y1|x                                        0.334     0.356     0.397
y1|mean_PPD                                 0.558     0.564     0.578
y2|(Intercept)                              0.306     0.337     0.394
y2|x                                        0.827     0.852     0.903
y2|mean_PPD                                 0.567     0.574     0.586
y3|(Intercept)                              0.339     0.383     0.465
y3|x                                        0.417     0.439     0.484
y3|mean_PPD                                 0.576     0.582     0.594
Sigma[id:y1|(Intercept),y1|(Intercept)]     0.259     0.295     0.376
Sigma[id:y2|(Intercept),y1|(Intercept)]     0.023     0.041     0.078
Sigma[id:y3|(Intercept),y1|(Intercept)]     0.150     0.180     0.242
Sigma[id:y2|(Intercept),y2|(Intercept)]     0.138     0.163     0.220
Sigma[id:y3|(Intercept),y2|(Intercept)]     0.109     0.132     0.181
Sigma[id:y3|(Intercept),y3|(Intercept)]     0.460     0.514     0.636
log-posterior                           -9078.127 -9064.529 -9037.395

Diagnostics:
                                        mcse  Rhat  n_eff
y1|(Intercept)                          0.001 1.002  4313
y1|x                                    0.000 1.000 10854
y1|mean_PPD                             0.000 1.000  9155
y2|(Intercept)                          0.001 1.000  6862
y2|x                                    0.000 0.999 11861
y2|mean_PPD                             0.000 1.000  9741
y3|(Intercept)                          0.001 1.001  5057
y3|x                                    0.000 1.000 12076
y3|mean_PPD                             0.000 1.000  8621
Sigma[id:y1|(Intercept),y1|(Intercept)] 0.001 1.000  3700
Sigma[id:y2|(Intercept),y1|(Intercept)] 0.000 1.001  3574
Sigma[id:y3|(Intercept),y1|(Intercept)] 0.001 1.002  2643
Sigma[id:y2|(Intercept),y2|(Intercept)] 0.001 1.002  4383
Sigma[id:y3|(Intercept),y2|(Intercept)] 0.001 1.005  2328
Sigma[id:y3|(Intercept),y3|(Intercept)] 0.001 1.002  3357
log-posterior                           0.488 1.005  1899

For each parameter, mcse is Monte Carlo standard error, n_eff is a crude measure of effective sample size, and Rhat is the potential scale reduction factor on split chains (at convergence Rhat=1).
> 
> 
> VarCorr(rstanmodel_list[[1]])
 Groups Name           Std.Dev. Corr       
 id     y1|(Intercept) 0.51292             
        y2|(Intercept) 0.37488  0.124      
        y3|(Intercept) 0.68301  0.436 0.431
> 
> save(file = "rstanarmModelbin.rda"
+ 	, rstanmodel_list
+ 	, rstancoef_df
+ 	, betas_df
+ 	, betas
+ )
> 
> 
