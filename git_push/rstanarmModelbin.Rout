
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #### ---- Project: APHRC Wash Data ----
> #### ---- Task: Simulation ----
> #### ---- Fit joint model ----
> #### ---- By: Steve and Jonathan ----
> #### ---- Date: 2019 Jul 04 (Thu) ----
> 
> library(dplyr)
> library(tidyr)
> library(tibble)
> library(ggplot2)
> library(rstanarm)
> 
> options(dplyr.width = Inf)
> 
> theme_set(theme_bw() + theme(panel.spacing=grid::unit(0,"lines")))
> 
> load("simulateHierarchicalmvn.rda")
> set.seed(7777)
> 
> # Objects in
> # * sim_dflist
> # * betas_df
> # * betas
> # * x
> 
> nsims <- length(sim_dflist)
> 
> report <- 1 # Index within nsims to save for summary
> rstanmodel_list <- list() 
> rstancoef_list <- list()
> for (s in 1:nsims){
+    df <- (sim_dflist[[s]]
+       %>% data.frame()
+    )
+ 	model <- stan_mvmer(
+ 		formula = list(
+ 			y1bin ~ x + (1 | id)
+ 			, y2bin ~ x + (1 | id)
+ 			, y3bin ~ x + (1 | id)
+ 		)
+ 		, data = sim_dflist[[1]]
+ 		, refresh = 0
+ 		, prior_intercept = normal(0, 10)
+ 		, prior = normal(0, 10)
+ 		, prior_aux = cauchy(0, 2)
+ 		, prior_covariance = lkj(1)
+ 		, family = list(binomial, binomial, binomial)
+ 		, chains = parallel::detectCores()
+ 		, cores = parallel::detectCores()
+ 		, seed = 7777
+ 		, iter = 2000
+ 	)
+ 	if (s <= report){
+ 		rstanmodel_list[[s]] <- model # Model to store
+ 	}
+ 	rstancoef_list[[s]] <- fixef(model)
+ }
Fitting a multivariate glmer model.

Please note the warmup may be much slower than later iterations!
> 
> # Print results
> rstancoef_df <- Reduce(rbind, rstancoef_list) %>% as_tibble()
> print(betas_df)
       coef betas  n
1  cor_y1y2   0.2 12
2  cor_y1y3   0.3 13
3  cor_y2y3   0.5 23
4     x:y10   0.3 10
5     x:y11   0.4 11
6     y1_sd   0.5  1
7     x:y20   0.3 20
8     x:y21   0.8 21
9     y2_sd   0.3  2
10    x:y30   0.4 30
11    x:y31   0.5 31
12    y3_sd   0.7  3
> print(rstancoef_df)
# A tibble: 2 x 3
     y1    y2    y3
  <dbl> <dbl> <dbl>
1 0.266 0.312 0.336
2 0.486 0.975 0.434
> 
> summary(rstanmodel_list[[1]])

Model Info:

 function:     stan_mvmer
 formula (y1): y1bin ~ x + (1 | id)
 family  (y1): binomial [logit]
 formula (y2): y2bin ~ x + (1 | id)
 family  (y2): binomial [logit]
 formula (y3): y3bin ~ x + (1 | id)
 family  (y3): binomial [logit]
 algorithm:    sampling
 priors:       see help('prior_summary')
 sample:       8000 (posterior sample size)
 num obs:      1000 (y1), 1000 (y2), 1000 (y3)
 groups:       id (100)
 runtime:      2.5 mins

Estimates:
                                          mean      sd        2.5%      25%    
y1|(Intercept)                              0.267     0.069     0.134     0.220
y1|x                                        0.487     0.067     0.359     0.439
y1|mean_PPD                                 0.572     0.022     0.530     0.558
y2|(Intercept)                              0.312     0.079     0.159     0.259
y2|x                                        0.978     0.084     0.817     0.920
y2|mean_PPD                                 0.580     0.020     0.540     0.567
y3|(Intercept)                              0.337     0.068     0.203     0.291
y3|x                                        0.434     0.069     0.297     0.387
y3|mean_PPD                                 0.588     0.021     0.546     0.574
Sigma[id:y1|(Intercept),y1|(Intercept)]     0.021     0.028     0.000     0.002
Sigma[id:y2|(Intercept),y1|(Intercept)]    -0.005     0.021    -0.059    -0.012
Sigma[id:y3|(Intercept),y1|(Intercept)]     0.001     0.012    -0.023    -0.003
Sigma[id:y2|(Intercept),y2|(Intercept)]     0.099     0.086     0.000     0.030
Sigma[id:y3|(Intercept),y2|(Intercept)]     0.001     0.024    -0.049    -0.008
Sigma[id:y3|(Intercept),y3|(Intercept)]     0.030     0.038     0.000     0.004
log-posterior                           -2357.713    14.868 -2386.657 -2367.742
                                          50%       75%       97.5%  
y1|(Intercept)                              0.266     0.311     0.403
y1|x                                        0.486     0.534     0.618
y1|mean_PPD                                 0.572     0.587     0.615
y2|(Intercept)                              0.312     0.366     0.469
y2|x                                        0.975     1.033     1.147
y2|mean_PPD                                 0.580     0.594     0.619
y3|(Intercept)                              0.336     0.383     0.471
y3|x                                        0.434     0.479     0.573
y3|mean_PPD                                 0.588     0.603     0.630
Sigma[id:y1|(Intercept),y1|(Intercept)]     0.010     0.029     0.101
Sigma[id:y2|(Intercept),y1|(Intercept)]    -0.001     0.003     0.032
Sigma[id:y3|(Intercept),y1|(Intercept)]     0.000     0.004     0.029
Sigma[id:y2|(Intercept),y2|(Intercept)]     0.080     0.145     0.307
Sigma[id:y3|(Intercept),y2|(Intercept)]     0.000     0.010     0.054
Sigma[id:y3|(Intercept),y3|(Intercept)]     0.016     0.044     0.135
log-posterior                           -2357.647 -2347.771 -2328.132

Diagnostics:
                                        mcse  Rhat  n_eff
y1|(Intercept)                          0.000 1.000 19242
y1|x                                    0.000 0.999 20317
y1|mean_PPD                             0.000 1.000 12037
y2|(Intercept)                          0.001 1.000 14661
y2|x                                    0.001 0.999 15476
y2|mean_PPD                             0.000 1.000 10959
y3|(Intercept)                          0.000 0.999 19411
y3|x                                    0.001 0.999 18047
y3|mean_PPD                             0.000 1.000 11145
Sigma[id:y1|(Intercept),y1|(Intercept)] 0.000 1.001  4855
Sigma[id:y2|(Intercept),y1|(Intercept)] 0.000 1.002  3215
Sigma[id:y3|(Intercept),y1|(Intercept)] 0.000 1.001  5478
Sigma[id:y2|(Intercept),y2|(Intercept)] 0.002 1.002  2517
Sigma[id:y3|(Intercept),y2|(Intercept)] 0.000 1.000  6724
Sigma[id:y3|(Intercept),y3|(Intercept)] 0.001 1.002  3795
log-posterior                           0.338 1.002  1932

For each parameter, mcse is Monte Carlo standard error, n_eff is a crude measure of effective sample size, and Rhat is the potential scale reduction factor on split chains (at convergence Rhat=1).
> 
> 
> VarCorr(rstanmodel_list[[1]])
 Groups Name           Std.Dev. Corr         
 id     y1|(Intercept) 0.14428               
        y2|(Intercept) 0.31420  -0.115       
        y3|(Intercept) 0.17460   0.036  0.020
> 
> save(file = "rstanarmModelbin.rda"
+ 	, rstanmodel_list
+ 	, rstancoef_df
+ 	, betas_df
+ 	, betas
+ )
> 
> 
