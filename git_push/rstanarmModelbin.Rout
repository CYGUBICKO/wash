
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #### ---- Project: APHRC Wash Data ----
> #### ---- Task: Simulation ----
> #### ---- Fit joint model ----
> #### ---- By: Steve and Jonathan ----
> #### ---- Date: 2019 Jul 04 (Thu) ----
> 
> library(dplyr)
> library(tidyr)
> library(tibble)
> library(ggplot2)
> library(rstanarm)
> 
> options(dplyr.width = Inf)
> 
> theme_set(theme_bw() + theme(panel.spacing=grid::unit(0,"lines")))
> 
> load("simulateHierarchicalmvn.rda")
> set.seed(7777)
> 
> # Objects in
> # * sim_dflist
> # * betas_df
> # * betas
> # * x
> 
> nsims <- length(sim_dflist)
> 
> report <- 1 # Index within nsims to save for summary
> rstanmodel_list <- list() 
> rstancoef_list <- list()
> for (s in 1:nsims){
+    df <- (sim_dflist[[s]]
+       %>% data.frame()
+    )
+ 	model <- stan_mvmer(
+ 		formula = list(
+ 			y1bin ~ x + (1 | id)
+ 			, y2bin ~ x + (1 | id)
+ 			, y3bin ~ x + (1 | id)
+ 		)
+ 		, data = sim_dflist[[1]]
+ 		, refresh = 0
+ 		, prior_intercept = normal(0, 1)
+ 		, prior = normal(0, 1)
+ 		, prior_aux = normal(0, 1)
+ 		, prior_covariance = lkj(4)
+ 		, family = list(binomial, binomial, binomial)
+ 		, chains = parallel::detectCores()
+ 		, cores = parallel::detectCores()
+ 		, seed = 7777
+ 		, iter = 2000
+ 	)
+ 	if (s <= report){
+ 		rstanmodel_list[[s]] <- model # Model to store
+ 	}
+ 	rstancoef_list[[s]] <- fixef(model)
+ }
Fitting a multivariate glmer model.

Please note the warmup may be much slower than later iterations!
> 
> # Print results
> rstancoef_df <- Reduce(rbind, rstancoef_list) %>% as_tibble()
> print(betas_df)
       coef betas  n
1  cor_y1y2   0.2 12
2  cor_y1y3   0.3 13
3  cor_y2y3   0.5 23
4     x:y10   0.3 10
5     x:y11   0.4 11
6     y1_sd   0.5  1
7     x:y20   0.3 20
8     x:y21   0.8 21
9     y2_sd   0.3  2
10    x:y30   0.4 30
11    x:y31   0.5 31
12    y3_sd   0.7  3
> print(rstancoef_df)
# A tibble: 2 x 3
     y1    y2    y3
  <dbl> <dbl> <dbl>
1 0.280 0.303 0.340
2 0.344 0.755 0.387
> 
> summary(rstanmodel_list[[1]])

Model Info:

 function:     stan_mvmer
 formula (y1): y1bin ~ x + (1 | id)
 family  (y1): binomial [logit]
 formula (y2): y2bin ~ x + (1 | id)
 family  (y2): binomial [logit]
 formula (y3): y3bin ~ x + (1 | id)
 family  (y3): binomial [logit]
 algorithm:    sampling
 priors:       see help('prior_summary')
 sample:       8000 (posterior sample size)
 num obs:      3000 (y1), 3000 (y2), 3000 (y3)
 groups:       id (100)
 runtime:      3.8 mins

Estimates:
                                          mean      sd        2.5%      25%    
y1|(Intercept)                              0.281     0.067     0.152     0.236
y1|x                                        0.344     0.039     0.266     0.318
y1|mean_PPD                                 0.566     0.012     0.542     0.558
y2|(Intercept)                              0.303     0.047     0.212     0.272
y2|x                                        0.754     0.045     0.667     0.724
y2|mean_PPD                                 0.570     0.012     0.546     0.562
y3|(Intercept)                              0.340     0.080     0.183     0.287
y3|x                                        0.387     0.041     0.307     0.360
y3|mean_PPD                                 0.576     0.012     0.553     0.568
Sigma[id:y1|(Intercept),y1|(Intercept)]     0.283     0.065     0.171     0.237
Sigma[id:y2|(Intercept),y1|(Intercept)]     0.045     0.028    -0.004     0.026
Sigma[id:y3|(Intercept),y1|(Intercept)]     0.125     0.050     0.032     0.091
Sigma[id:y2|(Intercept),y2|(Intercept)]     0.067     0.032     0.015     0.044
Sigma[id:y3|(Intercept),y2|(Intercept)]     0.064     0.034     0.003     0.041
Sigma[id:y3|(Intercept),y3|(Intercept)]     0.465     0.096     0.305     0.398
log-posterior                           -6087.959    17.878 -6124.857 -6099.653
                                          50%       75%       97.5%  
y1|(Intercept)                              0.280     0.325     0.416
y1|x                                        0.344     0.371     0.422
y1|mean_PPD                                 0.566     0.574     0.590
y2|(Intercept)                              0.303     0.334     0.396
y2|x                                        0.755     0.784     0.841
y2|mean_PPD                                 0.570     0.578     0.593
y3|(Intercept)                              0.340     0.395     0.496
y3|x                                        0.387     0.415     0.469
y3|mean_PPD                                 0.576     0.584     0.599
Sigma[id:y1|(Intercept),y1|(Intercept)]     0.277     0.321     0.430
Sigma[id:y2|(Intercept),y1|(Intercept)]     0.044     0.063     0.103
Sigma[id:y3|(Intercept),y1|(Intercept)]     0.123     0.157     0.230
Sigma[id:y2|(Intercept),y2|(Intercept)]     0.063     0.085     0.140
Sigma[id:y3|(Intercept),y2|(Intercept)]     0.062     0.085     0.135
Sigma[id:y3|(Intercept),y3|(Intercept)]     0.456     0.523     0.680
log-posterior                           -6087.662 -6075.521 -6054.938

Diagnostics:
                                        mcse  Rhat  n_eff
y1|(Intercept)                          0.001 1.002  2718
y1|x                                    0.000 1.000 10203
y1|mean_PPD                             0.000 1.000 10404
y2|(Intercept)                          0.001 1.001  5803
y2|x                                    0.000 0.999 11066
y2|mean_PPD                             0.000 1.000  9690
y3|(Intercept)                          0.001 1.001  3127
y3|x                                    0.000 1.000 10011
y3|mean_PPD                             0.000 1.000  8287
Sigma[id:y1|(Intercept),y1|(Intercept)] 0.001 1.001  3172
Sigma[id:y2|(Intercept),y1|(Intercept)] 0.000 1.000  4810
Sigma[id:y3|(Intercept),y1|(Intercept)] 0.001 1.002  2239
Sigma[id:y2|(Intercept),y2|(Intercept)] 0.001 1.001  3405
Sigma[id:y3|(Intercept),y2|(Intercept)] 0.001 1.004  1345
Sigma[id:y3|(Intercept),y3|(Intercept)] 0.002 1.001  3196
log-posterior                           0.420 1.001  1813

For each parameter, mcse is Monte Carlo standard error, n_eff is a crude measure of effective sample size, and Rhat is the potential scale reduction factor on split chains (at convergence Rhat=1).
> 
> 
> VarCorr(rstanmodel_list[[1]])
 Groups Name           Std.Dev. Corr       
 id     y1|(Intercept) 0.53161             
        y2|(Intercept) 0.25839  0.331      
        y3|(Intercept) 0.68184  0.345 0.361
> 
> save(file = "rstanarmModelbin.rda"
+ 	, rstanmodel_list
+ 	, rstancoef_df
+ 	, betas_df
+ 	, betas
+ )
> 
> 
